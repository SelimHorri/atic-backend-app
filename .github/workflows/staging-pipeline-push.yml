
name: on PR, PUSH staging cita-backend-app workflow CI/CD pipeline

on:
  pull_request:
    branches: [ staging ]
    types: [ opened, synchronize, reopened ]
  push:
    branches: [ staging ]

env:
  APP_NAME: cita-backend-app
  APP_VERSION: ${{ secrets.APP_VERSION }}
  DOCKER_IMAGE: ${{ secrets.DOCKER_IMAGE }}

jobs:
  
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
      - name: Run Docker Compose
        run: docker-compose up -d mysql zipkin
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B install -Pstaging -DSPRING_MAIL_PASSWORD=${{ secrets.SPRING_MAIL_PASSWORD }} -DAPP_SECURITY_JWT_SECRET_KEY=${{ secrets.APP_SECURITY_JWT_SECRET_KEY }} org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=SelimHorri_cita-backend-app
      - name: Upload Artifact
        if: ${{ github.event_name == 'push' }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.APP_NAME }}-artifact
          path: target/*.jar

  push:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 17
    - name: Download Artifact
      uses: actions/download-artifact@v3
      with:
        name: ${{ env.APP_NAME }}-artifact
        path: target
    - name: Push to Docker Registry
      uses: mr-smithers-excellent/docker-build-push@v5
      with:
        image: ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE }}
        tags: v${{ env.APP_VERSION }}-staging, staging
        buildArgs: APP_VERSION=${{ env.APP_VERSION }}, SPRING_MAIL_USERNAME=${{ secrets.SPRING_MAIL_USERNAME }}, SPRING_MAIL_PASSWORD=${{ secrets.SPRING_MAIL_PASSWORD }}, APP_SECURITY_JWT_SECRET_KEY=${{ secrets.APP_SECURITY_JWT_SECRET_KEY }} 
        registry: docker.io
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}







